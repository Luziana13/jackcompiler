<class>
<keyword>class</keyword>
<identifier>Card</identifier>
<symbol>{</symbol>
<classVarDec>
<keyword>field</keyword>
<keyword>int</keyword>
<identifier>x</identifier>
<symbol>,</symbol>
<identifier>y</identifier>
<symbol>;</symbol>
</classVarDec>
<classVarDec>
<keyword>field</keyword>
<keyword>int</keyword>
<identifier>size</identifier>
<symbol>;</symbol>
</classVarDec>
<classVarDec>
<keyword>field</keyword>
<keyword>int</keyword>
<identifier>type</identifier>
<symbol>;</symbol>
</classVarDec>
<classVarDec>
<keyword>field</keyword>
<keyword>boolean</keyword>
<identifier>faced</identifier>
<symbol>;</symbol>
</classVarDec>
<subroutineDec>
<keyword>constructor</keyword>
<identifier>Card</identifier>
<identifier>new</identifier>
<symbol>(</symbol>
<parameterList>
<keyword>int</keyword>
<identifier>Ax</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>Ay</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>Asize</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>Atype</identifier>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>x</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>Ax</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>y</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>Ay</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>type</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>Atype</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>size</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>Asize</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>faced</identifier>
<symbol>=</symbol>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>back</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<expression>
<term>
<keyword>this</keyword>
</term>
</expression>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>back</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<integerConstant>1</integerConstant>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<integerConstant>1</integerConstant>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>-</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
<symbol>+</symbol>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>-</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<letStatement>
<keyword>let</keyword>
<identifier>faced</identifier>
<symbol>=</symbol>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>function</keyword>
<keyword>void</keyword>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<parameterList>
<keyword>int</keyword>
<identifier>x</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>y</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>,</symbol>
<keyword>int</keyword>
<identifier>w</identifier>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>w</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>h</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>boolean</keyword>
<identifier>getFaced</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<returnStatement>
<keyword>return</keyword>
<expression>
<term>
<identifier>faced</identifier>
</term>
</expression>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>face</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<identifier>type</identifier>
</term>
<symbol>=</symbol>
<term>
<integerConstant>1</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>drawType1</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>;</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<identifier>type</identifier>
</term>
<symbol>=</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>drawType2</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>;</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<identifier>type</identifier>
</term>
<symbol>=</symbol>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>drawType3</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>;</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<identifier>type</identifier>
</term>
<symbol>=</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>drawType4</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>;</symbol>
</ifStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<term>
<identifier>type</identifier>
</term>
<symbol>=</symbol>
<term>
<integerConstant>5</integerConstant>
</term>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>drawType5</identifier>
<symbol>(</symbol>
<expressionList>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>;</symbol>
</ifStatement>
<letStatement>
<keyword>let</keyword>
<identifier>faced</identifier>
<symbol>=</symbol>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>int</keyword>
<identifier>getType</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<returnStatement>
<keyword>return</keyword>
<expression>
<term>
<identifier>type</identifier>
</term>
</expression>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>drawType1</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h2</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w2</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>w</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<letStatement>
<keyword>let</keyword>
<identifier>w2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>drawType2</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h2</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w2</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>w</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<letStatement>
<keyword>let</keyword>
<identifier>w2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>h2</identifier>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>drawType3</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>d</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h2</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w2</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>w</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<letStatement>
<keyword>let</keyword>
<identifier>w2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h2</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>d</identifier>
<symbol>=</symbol>
<expression>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>d</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<identifier>h2</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>d</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>-</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>d</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>3</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h2</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w2</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>drawType4</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>w</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawCircle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>8</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>drawType5</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>h</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>w</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<letStatement>
<keyword>let</keyword>
<identifier>w</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<identifier>h</identifier>
<symbol>=</symbol>
<expression>
<term>
<identifier>size</identifier>
</term>
<symbol>*</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>;</symbol>
</letStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>true</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Card</identifier>
<symbol>.</symbol>
<identifier>drawRectangle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>setColor</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>false</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawCircle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>8</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Screen</identifier>
<symbol>.</symbol>
<identifier>drawCircle</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<identifier>x</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>w</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>y</identifier>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>2</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
<symbol>+</symbol>
<term>
<symbol>(</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>4</integerConstant>
</term>
</expression>
<symbol>)</symbol>
</term>
</expression>
<symbol>,</symbol>
<expression>
<term>
<identifier>h</identifier>
</term>
<symbol>/</symbol>
<term>
<integerConstant>8</integerConstant>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>dispose</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<expressionList>
<expression>
<term>
<keyword>this</keyword>
</term>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<symbol>}</symbol>
</class>
